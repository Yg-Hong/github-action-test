name: CI pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  frontend:
    runs-on: ubuntu-latest # The runner to use
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: "9.15.4"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        working-directory: frontend

      - name: Run lint
        run: pnpm lint
        working-directory: frontend

      - name: Check ts
        run: pnpm tsc
        working-directory: frontend

      - name: Build Frontend
        run: pnpm build
        working-directory: frontend

  backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: "17"
          distribution: "graalvm"

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('backend/**/*.gradle*', 'backend/**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Build and test Backend
        run: |
          chmod +x gradlew
          ./gradlew build --no-daemon
        working-directory: backend

  java-sdk:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK (for Java SDK)
        uses: actions/setup-java@v4
        with:
          java-version: "11"
          distribution: "corretto"

      - name: Build and test Java SDK
        run: |
          chmod +x gradlew
          ./gradlew build --no-daemon
        working-directory: sdk/java-sdk
